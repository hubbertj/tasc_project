swagger: "2.0"
info:
  version: "1.0.0"
  title: Store Backend App
host: localhost:10010
basePath: /api/v1
schemes:
  - http
  - https
consumes: [application/json]
produces: [application/json]

# Swagger Tags
tags:
  - name: Health
    description: Used to test health of the backend.
  - name: Checkout
    description: Used to manage checkout transactions.
  - name: Item
    description: Used to manage items in the system.

paths:
  "/checkout/{transactionId}":
    x-swagger-router-controller: checkout.controller
    get:
      tags:
        - Checkout
      description: Returns a transactions
      operationId: getTransaction
      parameters:
        - name: transactionId
          in: path
          description: ID of sales transactions
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CheckoutResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Checkout
      description: Removes a transaction.
      operationId: deleteTransaction
      parameters:
        - name: transactionId
          in: path
          description: ID of sales transactions
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SimpleResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - Checkout
      description: Updates an existing purchase transaction with new items.
      operationId: putTransaction
      parameters:
        - name: transactionId
          in: path
          description: ID of sales transactions
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CheckoutResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /checkout:
    x-swagger-router-controller: checkout.controller
    post:
      tags:
        - Checkout
      description: Submits items for a transaction.
      consumes:
        - application/json
      produces:
        - application/json
      operationId: createTransaction
      parameters:
        - in: body
          name: items
          description: List of items & amounts which will be processed as a transaction.
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/CheckoutCreateRequest"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CheckoutResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /health:
    x-swagger-router-controller: health.controller
    get:
      tags:
        - Health
      description: Returns status of the system.
      operationId: healthCheck
      parameters:
        - name: status
          in: query
          description: The status of the system.
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/HelloWorldResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  "/item/{itemId}":
    x-swagger-router-controller: item.controller
    get:
      tags:
        - Item
      description: Returns a item.
      operationId: getItem
      parameters:
        - name: itemId
          in: path
          description: ID of the item we are retrieving
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Item"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Item
      description: Removes a item.
      operationId: deleteItem
      parameters:
        - name: itemId
          in: path
          description: ID of the item we are removing
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SimpleResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/item/deleteAll":
    x-swagger-router-controller: item.controller
    delete:
      tags:
        - Item
      description: Removes a listo of items.
      operationId: deleteItems
      parameters:
        - in: body
          name: items
          description: List of items which will be removed.
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/DeleteItemRequest"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SimpleResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/item/getAll":
    x-swagger-router-controller: item.controller
    get:
      tags:
        - Item
      description: Gets all items in the system.
      operationId: getAllItems
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Item"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /item:
    x-swagger-router-controller: item.controller
    post:
      tags:
        - Item
      description: Adds an single item in the system.
      operationId: postItem
      parameters:
        - in: body
          name: item
          description: Item which will be adding to the system.
          required: true
          schema:
            $ref: "#/definitions/ItemNew"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Item"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - Item
      description: Updates an single item in the system.
      operationId: putItem
      parameters:
        - in: body
          name: item
          description: Item which will be updated and its attr.
          required: true
          schema:
            $ref: "#/definitions/Item"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Item"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /swagger:
    x-swagger-pipe: swagger_raw

# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  CheckoutResponse:
    properties:
      transaction:
        $ref: "#/definitions/SaleTransaction"  
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
      code:
        type: integer
        format: int64
  CheckoutCreateRequest:
    properties:
      quantity:
        type: integer
        format: int64
      ItemId:
        type: integer
        format: int64
  DeleteItemRequest:
    properties:
      ItemId:
        type: integer
        format: int64
  SimpleResponse:
    required:
      - message
    properties:
      message:
        type: string

# entity & Response Objects
  SaleTransaction:
    properties:
      id:
        type: integer
        format: int64
      subTotal:
        type: number
        format: double
      tax:
        type: number
        format: double
      total:
        type: number
        format: double 
      items:
        type: array
        items:
          properties:
            id:
              type: integer
              format: int64
            name:
              type: string
            type:
              type: string
            import:
              type: boolean
            except:
              type: boolean
            price:
              type: number
              format: double
            quantity:
              type: integer
              format: int64
  ItemNew:
    properties:
      name:
        type: string
      type:
        type: string
      import:
        type: boolean
      except:
        type: boolean
      price:
        type: number
        format: double
    xml:
      name: ItemNew
  Item:
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      type:
        type: string
      import:
        type: boolean
      except:
        type: boolean
      price:
        type: number
        format: double
    xml:
      name: Item
