swagger: "2.0"
info:
  version: "0.0.1"
  title: Store Backend App
host: localhost:10010
basePath: /api/v1
schemes:
  # tip: remove http to make production-grade
  - http
  - https
consumes: [application/json]
produces: [application/json]

tags:
  - name: Health
    description: Used to test health of the backend.
  - name: Checkout
    description: Used to manage checkout transactions.
  - name: Item
    description: CRUD for getting a item.

paths:
  "/checkout/{transactionId}":
    x-swagger-router-controller: checkout
    get:
      tags:
        - Checkout
      description: Returns list of items in the transactions
      operationId: getTransaction
      parameters:
        - name: transactionId
          in: path
          description: ID of sales transactions
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/HelloWorldResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Checkout
      description: Removes a transaction.
      operationId: deleteTransaction
      parameters:
        - name: transactionId
          in: path
          description: ID of sales transactions
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/HelloWorldResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - Checkout
      description: Updates an existing purchase transaction with new items.
      operationId: putTransaction
      parameters:
        - name: transactionId
          in: path
          description: ID of sales transactions
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/HelloWorldResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /checkout:
    post:
      tags:
        - Checkout
      description: Submits items for a transaction.
      consumes:
        - application/json
      produces:
        - application/json
      operationId: createTransaction
      parameters:
        - in: body
          name: items
          description: List of items which will be processed
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Item"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/HelloWorldResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      tags:
        - Health
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  CheckoutResponse:
    properties:
      plans:
        type: array
        items:
          $ref: "#/definitions/Item"  
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
# Entities
  Item:
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      type:
        type: string
      imported:
        type: boolean
      price:
        type: number
        format: double 
    xml:
      name: Item
